// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Walks.API.Data;

#nullable disable

namespace Walks.API.Migrations
{
    [DbContext(typeof(WalksDbContext))]
    [Migration("20231114104647_Seeding data for Difficulties and Regions")]
    partial class SeedingdataforDifficultiesandRegions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Walks.API.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d14055f3-9faf-4957-af7c-62050c75c3f1"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("ffb6f7dc-9f93-46d6-b6dc-5c4e19be1d85"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("3ec94a58-1ad5-4df0-ba59-5bc3470720a0"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("Walks.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3762c9d5-c95c-4ad0-97fc-478ccd7f0ae4"),
                            Code = "TK",
                            Name = "Siddaganga Hills",
                            RegionImageUrl = "https://www.google.com/imgres?imgurl=https%3A%2F%2Fi0.wp.com%2Fstepstogether.in%2Fwp-content%2Fuploads%2F2017%2F04%2FTpic-12.jpg%3Ffit%3D2520%252C1301%26ssl%3D1&tbnid=HBhd1gFODnJP8M&vet=12ahUKEwjcibm3p8OCAxULUGwGHbfZABgQMygcegUIARCRAQ..i&imgrefurl=https%3A%2F%2Fstepstogether.in%2F2017%2F12%2F17%2Fshivagange%2F&docid=PQ0xc9_VwSETiM&w=2520&h=1301&q=siddagange%20hills&ved=2ahUKEwjcibm3p8OCAxULUGwGHbfZABgQMygcegUIARCRAQ"
                        });
                });

            modelBuilder.Entity("Walks.API.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LengthInKm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("Walks.API.Models.Domain.Walk", b =>
                {
                    b.HasOne("Walks.API.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Walks.API.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
